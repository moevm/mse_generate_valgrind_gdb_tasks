Пример с отслеживанием изменения значения в памяти
--------------------------------------------------

Программа вычисляет значение контрольной суммы CRC16 для массива байтов.
Исходный текст crc16.cpp

1) Скомпилировать и собрать программу с отладочными символами
g++ -g -ggdb crc16.cpp -0 crc16

2) Запустить программу под отладчиком gdb
gdb crc16

3) Установить точку останова на входе в главную программу
b main

4) Запустить программу на выполнение
r

5) Отслеживать изменение значения переменной crc
watch crc

6) Продолжить выполнение до точки останова (при этом первый останов произойдет при инициализации переменной crc - присвоено значение 0xffff)
c

7) Продолжать выполнение до точки останова по одному останову или сразу на указанное количество
c 4

(в данном случае на 4-м останове) 

Информация к размышлению:
https://sourceware.org/gdb/onlinedocs/gdb/Set-Watchpoints.html
http://www.unknownroad.com/rtfm/gdbtut/gdbwatch.html

Скрипт crc16check.py
--------------------

Принимает в качестве аргументов два параметра:
1) Эталонное значение переменной
2) Пользовательский скрипт: последовательность команд для GDB которая позволяет узнать значение переменной на нужной итерации
Последовательность команд должна передаваться в виде "команда;команда;команда"

Запуск скрипта:
python3 crc16check.py 38531 "b main;r;watch crc;c;c 4"

Запуск скрипта без параметров - тестовый

Скрипт возвращает exit_code:
0 - правильно
1 - не правильно (от GDB получено значение переменной, но оно неправильное)
2 - вообще неправильно (от GDB не получены значения переменной)
